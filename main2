import numpy as np
import matplotlib.pyplot as plt
import matplotlib.dates as mdates
import urllib

print('Enter income statement information')
ebit = float(input("Enter EBIT/operating profit"))
int_ex = float(input("Enter interest expenses"))
rev = float(input("Enter revenues"))
cogs = float(input("Enter costs of goods"))

print("Enter balance sheet information")
short_assets = float(input("Enter short term assets"))
t_receivables = float(input("Enter trades receivables"))
inventory = float(input("Enter inventory"))
tot_assets = float(input("Enter short total assets"))
short_liabl = float(input("Enter short term liabilities"))
t_payables = float(input("Enter trades payables"))
tot_liabl = float(input("Enter total liabilities"))
tot_equity = float(input("Enter total equity"))

#ratios
def days_sales_outstanding():
    return (t_receivables/rev)*365
def days_payable_outstanding():
    return (t_payables / cogs) * 365
def days_inventory_outstanding():
    return (inventory/cogs)*365

                                            #liquidity
def current_ratio():
    return short_assets/short_liabl
def net_trade_cycle():
    return days_sales_outstanding() + days_inventory_outstanding() - days_payable_outstanding()

                                            #profitability
def roa():
    return ebit/tot_assets

def roa_percentage ():
    return 100 * ebit/tot_assets

      

                                            #graphics
def current_ratio_pic():
    plt.xkcd()
    plt.axhline(1, color='r', linestyle='-')
    plt.axhline(3, color="r", linestyle='-')
    plt.text(0.8,3.1,"Underperformance", fontsize=20)
    plt.text(1,0.9,"Risk", fontsize=20)
    plt.ylabel("Current ratio")
    plt.xticks([])
    plt.bar(1,current_ratio())
    plt.show()

def capital_structure():
    plt.xkcd()
    plt.pie([tot_liabl,tot_equity],
            labels=["Liabilities","Equity"],
            startangle=90,
            explode = (0, 0.1))
    plt.legend()
    plt.title("Capital structure")
    plt.show()

def cash_conversion_cycle():
    plt.xkcd()
    fig, ax = plt.subplots(1, 1)
    ax.bar(1, days_inventory_outstanding(), label="Inventory purchase")
    ax.bar(1, days_sales_outstanding(), bottom=days_inventory_outstanding, label="inventory sale")
    ax.bar(1, days_payable_outstanding(), bottom=days_sales_outstanding, label="cash collect")
    ax.set_xlim(0, 1)
    plt.ylabel('Days')
    plt.xticks([])
    plt.legend()
    plt.show()
